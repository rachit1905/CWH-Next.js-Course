import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import InfiniteScroll from "react-infinite-scroll-component";

export default function Home(props) {
  const allrecomm = props.recommends;
  const [recomm, setRecomm] = useState(allrecomm.slice(0, 4));
  const [count, setCount] = useState(4);

  return (
    <div className={styles.container}>
      <style jsx>
        {`
          h2 {
            font-size: 38px;
          }
          h3 {
            font-size: 28px;
          }
        `}
      </style>
      <Head>
        <title>Hunting Coder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="">Hunting Coder</a>
        </h1>

        <div className={styles.imgwrap}>
          <Image
            className={styles.myImg}
            src="/homeImg.jpg"
            height={200}
            width={200}
          />
        </div>

        <p className={styles.description}>
          A blog for hunting coders by hunting coders
        </p>

        <h2>Popular Blogs</h2>
        <div className={styles.grid}>
          <InfiniteScroll
            style={{ overflow: "shown", width: "100%" }}
            dataLength={count}
            next={() => {
              setCount(count + 2);
              setRecomm(allrecomm.slice(0, count));
            }}
            hasMore={recomm.length < allrecomm.length}
            loader={<h4>Loading...</h4>}
            endMessage={
              <p style={{ textAlign: "center" }}>
                <b>Yay! You have seen it all</b>
              </p>
            }
          >
            {recomm.map((blog,key) => {
              return (
                <div key={key} className={styles.card}>
                  <a href={"/blogpost/" + blog.href}>
                    <h2>{blog.title}</h2>
                    <p>{blog.content.substr(0, 240)}...</p>
                  </a>
                </div>
              );
            })}
          </InfiniteScroll>
        </div>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
}

export async function getServerSideProps(context) {
  let allBlogs = await fetch("http://localhost:3000/api/getBlogs");
  allBlogs = await allBlogs.json();
  let recommends = [];
  while (allBlogs.length > 0) {
    let choice = Math.floor(Math.random() * (allBlogs.length - 1));
    recommends.push(allBlogs[choice]);
    allBlogs.splice(choice, 1);
  }
  // console.log(recommends);
  return {
    props: { recommends },
  };
}
